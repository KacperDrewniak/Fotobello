Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
var defaultMergedResolver_1 = require("./defaultMergedResolver");
var resolveFromParentTypename_1 = require("./resolveFromParentTypename");
function makeMergedType(type) {
    if (type instanceof graphql_1.GraphQLObjectType) {
        type.isTypeOf = undefined;
        var fieldMap_1 = type.getFields();
        Object.keys(fieldMap_1).forEach(function (fieldName) {
            fieldMap_1[fieldName].resolve = defaultMergedResolver_1.default;
            fieldMap_1[fieldName].subscribe = null;
        });
    }
    else if (type instanceof graphql_1.GraphQLInterfaceType || type instanceof graphql_1.GraphQLUnionType) {
        type.resolveType = function (parent) { return resolveFromParentTypename_1.default(parent); };
    }
}
exports.makeMergedType = makeMergedType;
//# sourceMappingURL=makeMergedType.js.map