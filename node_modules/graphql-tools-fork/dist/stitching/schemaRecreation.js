Object.defineProperty(exports, "__esModule", { value: true });
function fieldToFieldConfig(field) {
    return {
        type: field.type,
        args: argsToFieldConfigArgumentMap(field.args),
        resolve: field.resolve,
        subscribe: field.subscribe,
        description: field.description,
        deprecationReason: field.deprecationReason,
        astNode: field.astNode,
    };
}
exports.fieldToFieldConfig = fieldToFieldConfig;
function argsToFieldConfigArgumentMap(args) {
    var result = {};
    args.forEach(function (arg) {
        var newArg = argumentToArgumentConfig(arg);
        if (newArg) {
            result[newArg[0]] = newArg[1];
        }
    });
    return result;
}
exports.argsToFieldConfigArgumentMap = argsToFieldConfigArgumentMap;
function argumentToArgumentConfig(argument) {
    return [
        argument.name,
        {
            type: argument.type,
            defaultValue: argument.defaultValue,
            description: argument.description,
            astNode: argument.astNode,
        },
    ];
}
exports.argumentToArgumentConfig = argumentToArgumentConfig;
function inputFieldMapToFieldConfigMap(fields) {
    var result = {};
    Object.keys(fields).forEach(function (name) {
        result[name] = inputFieldToFieldConfig(fields[name]);
    });
    return result;
}
exports.inputFieldMapToFieldConfigMap = inputFieldMapToFieldConfigMap;
function inputFieldToFieldConfig(field) {
    return {
        type: field.type,
        defaultValue: field.defaultValue,
        description: field.description,
        astNode: field.astNode,
    };
}
exports.inputFieldToFieldConfig = inputFieldToFieldConfig;
//# sourceMappingURL=schemaRecreation.js.map